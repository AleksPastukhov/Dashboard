{"version":3,"file":"static/js/306.818dcfff.chunk.js","mappings":"4MAIaA,EAAYC,EAAAA,GAAAA,IAAH,uFACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,eAAnB,IAKVC,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,8JAIC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,gBAAnB,IACZ,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,SAAnB,IAKCC,GAAQT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,wSAGI,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,eAAnB,IACZ,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,cAAnB,IAOY,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOS,KAAnB,IAKZC,EAAcb,EAAAA,GAAAA,IAAH,mFAMXc,EAAWd,EAAAA,GAAAA,IAAH,sIAQRe,EAAQf,EAAAA,GAAAA,GAAH,gGAMLgB,EAAWhB,EAAAA,GAAAA,EAAH,+GAIV,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOc,kBAAnB,IAECC,EAAalB,EAAAA,GAAAA,OAAH,+WAIZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOgB,gBAAnB,IACU,SAAAlB,GAAC,OAAIA,EAAEC,MAAMC,OAAOiB,gBAAnB,IASL,SAAAnB,GAAC,OAAIA,EAAEC,MAAMmB,SAAZ,IAGNC,EAActB,EAAAA,GAAAA,EAAH,uI,SCDxB,EAhEa,WACX,IACMuB,GADWC,EAAAA,EAAAA,MACaC,SAC9BC,QAAQC,IAAIJ,GAEZ,IAAMK,GAAWC,EAAAA,EAAAA,MAKjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,SAPiB,WACnBN,EAAS,QACV,EAGC,UAIE,SAAC7B,EAAD,WACE,UAACM,EAAD,YACE,UAACS,EAAD,YACE,SAACC,EAAD,UACoB,WAAjBQ,GACC,SAAC,KAAD,CAASY,GAAG,QAAZ,sBAEA,SAAC,KAAD,CAASA,GAAG,IAAZ,6BAGJ,SAACnB,EAAD,qDAEF,UAACH,EAAD,WACoB,WAAjBU,GACC,iCACE,SAACd,EAAD,CAAO2B,KAAK,OAAOL,KAAK,OAAOM,YAAY,OAAOC,UAAQ,KAC1D,SAAC,KAAD,CAAcP,KAAK,aAGrB,yBAEF,SAACtB,EAAD,CAAO2B,KAAK,QAAQL,KAAK,QAAQM,YAAY,QAAQC,UAAQ,KAC7D,SAAC,KAAD,CAAcP,KAAK,YACnB,SAACtB,EAAD,CACE2B,KAAK,WACLL,KAAK,WACLM,YAAY,WACZC,UAAQ,KAEV,SAAC,KAAD,CAAcP,KAAK,eAGrB,SAACb,EAAD,CAAYkB,KAAK,SAAjB,SACoB,WAAjBb,EAA4B,iBAAmB,YAGlD,UAACD,EAAD,gBAEoB,WAAjBC,GACC,SAAC,KAAD,CAASY,GAAG,QAAZ,sBAEA,SAAC,KAAD,CAASA,GAAG,IAAZ,+BAOb,C,mDCvED,UAJe,WACb,OAAO,SAAC,IAAD,GACR,C","sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","views/SingUp.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Form, Field } from 'formik';\n\nexport const LoginForm = styled.div`\n  background-color: ${p => p.theme.colors.backgroundColor};\n  height: 100vh;\n  padding: 160px;\n`;\n\nexport const UserForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n  background-color: ${p => p.theme.colors.backgroundColors};\n  color: ${p => p.theme.colors.colorText};\n  width: 500px;\n  margin: auto;\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid #3d4250;\n  border-radius: 8px;\n  background-color: ${p => p.theme.colors.backgroundColor};\n  color: ${p => p.theme.colors.inputTextColor};\n  font-size: 15px;\n  line-height: calc(24 / 15);\n  padding: 19px 15px;\n  /* &:hover,\n  &:active,\n  &:focus {\n    background-color: ${p => p.theme.colors.white};\n    outline: transparent;\n  } */\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Title = styled.h1`\n  font-weight: 500;\n  font-size: 48px;\n  line-height: calc(56 / 48);\n`;\n\nexport const Subtitle = styled.p`\n  font-weight: 500;\n  font-size: 15px;\n  line-height: calc(24 / 15);\n  color: ${p => p.theme.colors.secondaryTextColor};\n`;\nexport const FormButton = styled.button`\n  width: 100%;\n  text-align: center;\n  padding: 20px 0;\n  color: ${p => p.theme.colors.primaryTextColor};\n  background-color: ${p => p.theme.colors.accentСolor};\n  border-radius: 8px;\n  border: 0;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: calc(24 / 15);\n  /* transition: box-shadow 250ms ease, transform 250ms ease;\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: ${p => p.theme.boxShadow};\n  } */\n`;\nexport const LoginButton = styled.p`\n  text-align: center;\n  font-size: 15px;\n  line-height: calc(24 / 15);\n\n  & a {\n    color: #78b4ed;\n  }\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { NavLink, useNavigate, useLocation } from 'react-router-dom';\nimport {\n  UserForm,\n  FormButton,\n  LoginButton,\n  Input,\n  FormWrapper,\n  TitleBox,\n  Title,\n  Subtitle,\n  LoginForm,\n} from './Form.styled';\n\nconst Form = () => {\n  const location = useLocation();\n  const locationPath = location.pathname;\n  console.log(locationPath);\n\n  const navigate = useNavigate();\n  const handleSubmit = () => {\n    navigate('/home');\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      onSubmit={handleSubmit}\n    >\n      <LoginForm>\n        <UserForm>\n          <TitleBox>\n            <Title>\n              {locationPath !== '/login' ? (\n                <NavLink to=\"login\">Welcome</NavLink>\n              ) : (\n                <NavLink to=\"/\">Welcome back</NavLink>\n              )}\n            </Title>\n            <Subtitle>Welcome! Please enter your details</Subtitle>\n          </TitleBox>\n          <FormWrapper>\n            {locationPath !== '/login' ? (\n              <>\n                <Input type=\"text\" name=\"name\" placeholder=\"Name\" required />\n                <ErrorMessage name=\"name\" />\n              </>\n            ) : (\n              <></>\n            )}\n            <Input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n            <ErrorMessage name=\"number\" />\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n            <ErrorMessage name=\"number\" />\n          </FormWrapper>\n\n          <FormButton type=\"submit\">\n            {locationPath !== '/login' ? 'Create account' : 'Log in'}\n          </FormButton>\n\n          <LoginButton>\n            Or\n            {locationPath !== '/login' ? (\n              <NavLink to=\"login\"> Log in</NavLink>\n            ) : (\n              <NavLink to=\"/\"> Sing Up</NavLink>\n            )}\n          </LoginButton>\n        </UserForm>\n      </LoginForm>\n    </Formik>\n  );\n};\nexport default Form;\n","import Form from '../components/Form/Form';\n\nconst SingUp = () => {\n  return <Form />;\n};\n\nexport default SingUp;\n"],"names":["LoginForm","styled","p","theme","colors","backgroundColor","UserForm","Form","backgroundColors","colorText","Input","Field","inputTextColor","white","FormWrapper","TitleBox","Title","Subtitle","secondaryTextColor","FormButton","primaryTextColor","accentСolor","boxShadow","LoginButton","locationPath","useLocation","pathname","console","log","navigate","useNavigate","initialValues","name","email","password","onSubmit","to","type","placeholder","required"],"sourceRoot":""}